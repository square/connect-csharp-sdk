/* 
 * Square Connect API
 *
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Square.Connect.Model
{
    /// <summary>
    /// Defines the fields that are included in the response body of a request to the __CreateMobileAuthorizationCode__ endpoint.
    /// </summary>
    [DataContract]
    public partial class CreateMobileAuthorizationCodeResponse :  IEquatable<CreateMobileAuthorizationCodeResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMobileAuthorizationCodeResponse" /> class.
        /// </summary>
        /// <param name="AuthorizationCode">Generated authorization code that connects a mobile application instance to a Square account..</param>
        /// <param name="ExpiresAt">The timestamp when &#x60;authorization_code&#x60; expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;..</param>
        /// <param name="Error">An error object that provides details about how creation of authorization code failed..</param>
        public CreateMobileAuthorizationCodeResponse(string AuthorizationCode = default(string), string ExpiresAt = default(string), Error Error = default(Error))
        {
            this.AuthorizationCode = AuthorizationCode;
            this.ExpiresAt = ExpiresAt;
            this.Error = Error;
        }
        
        /// <summary>
        /// Generated authorization code that connects a mobile application instance to a Square account.
        /// </summary>
        /// <value>Generated authorization code that connects a mobile application instance to a Square account.</value>
        [DataMember(Name="authorization_code", EmitDefaultValue=false)]
        public string AuthorizationCode { get; set; }
        /// <summary>
        /// The timestamp when &#x60;authorization_code&#x60; expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;.
        /// </summary>
        /// <value>The timestamp when &#x60;authorization_code&#x60; expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \&quot;2016-09-04T23:59:33.123Z\&quot;.</value>
        [DataMember(Name="expires_at", EmitDefaultValue=false)]
        public string ExpiresAt { get; set; }
        /// <summary>
        /// An error object that provides details about how creation of authorization code failed.
        /// </summary>
        /// <value>An error object that provides details about how creation of authorization code failed.</value>
        [DataMember(Name="error", EmitDefaultValue=false)]
        public Error Error { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateMobileAuthorizationCodeResponse {\n");
            sb.Append("  AuthorizationCode: ").Append(AuthorizationCode).Append("\n");
            sb.Append("  ExpiresAt: ").Append(ExpiresAt).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as CreateMobileAuthorizationCodeResponse);
        }

        /// <summary>
        /// Returns true if CreateMobileAuthorizationCodeResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of CreateMobileAuthorizationCodeResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateMobileAuthorizationCodeResponse other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AuthorizationCode == other.AuthorizationCode ||
                    this.AuthorizationCode != null &&
                    this.AuthorizationCode.Equals(other.AuthorizationCode)
                ) && 
                (
                    this.ExpiresAt == other.ExpiresAt ||
                    this.ExpiresAt != null &&
                    this.ExpiresAt.Equals(other.ExpiresAt)
                ) && 
                (
                    this.Error == other.Error ||
                    this.Error != null &&
                    this.Error.Equals(other.Error)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AuthorizationCode != null)
                    hash = hash * 59 + this.AuthorizationCode.GetHashCode();
                if (this.ExpiresAt != null)
                    hash = hash * 59 + this.ExpiresAt.GetHashCode();
                if (this.Error != null)
                    hash = hash * 59 + this.Error.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
